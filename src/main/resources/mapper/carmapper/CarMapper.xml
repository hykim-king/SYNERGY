<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.mapper.CarMapper">
<select id="getCarCode" resultType="java.lang.Integer" >
        SELECT CAR_CODE.NEXTVAL FROM dual
</select>
  <!-- doSave -->
<insert id="doSave" parameterType="com.pcwk.ehr.car.CarDTO">
  <!-- 시퀀스 미리 가져오기 -->
  <selectKey keyProperty="carCode" order="BEFORE" resultType="int">
    SELECT CAR_CODE.NEXTVAL FROM dual
  </selectKey>

  INSERT INTO CAR (
      CAR_CODE,
      PRODUCT_NAME,
      CAR_MF,
      CARTYPE,
      ORG_FN,
      MOD_FN,
      PATH,
      PRICE,
      FUEL,
      EF,
      ENGINE,
      DPM,
      BATTERY,
      MF_DT,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
  ) VALUES (
      #{carCode,      jdbcType=INTEGER},
      #{productName,  jdbcType=VARCHAR},
      #{carMf,        jdbcType=VARCHAR},
      #{cartype,      jdbcType=VARCHAR},
      #{orgFn,        jdbcType=VARCHAR},
      #{modFn,        jdbcType=VARCHAR},
      #{path,         jdbcType=VARCHAR},
      #{price,        jdbcType=INTEGER},
      #{fuel,         jdbcType=VARCHAR},
      #{ef,           jdbcType=DOUBLE},
      #{engine,       jdbcType=VARCHAR},
      #{dpm,          jdbcType=INTEGER},
      #{battery,      jdbcType=DOUBLE},
      #{mfDt,         jdbcType=INTEGER},
      #{regDt,        jdbcType=DATE},
      #{regId,        jdbcType=VARCHAR},
      #{modDt,        jdbcType=DATE},
      #{modId,        jdbcType=VARCHAR}
  )
</insert>
  <!-- doUpdate -->
<update id="doUpdate" parameterType="com.pcwk.ehr.car.CarDTO">
  UPDATE CAR
  SET
    product_name = #{productName,jdbcType=VARCHAR},
    car_mf       = #{carMf,jdbcType=VARCHAR},
    cartype      = #{cartype,jdbcType=VARCHAR},
    org_fn       = #{orgFn,jdbcType=VARCHAR},
    mod_fn       = #{modFn,jdbcType=VARCHAR},
    path         = #{path,jdbcType=VARCHAR},
    price        = #{price,jdbcType=INTEGER},
    fuel         = #{fuel,jdbcType=VARCHAR},
    ef           = #{ef,jdbcType=DOUBLE},
    engine       = #{engine,jdbcType=VARCHAR},
    dpm          = #{dpm,jdbcType=INTEGER},
    battery      = #{battery,jdbcType=DOUBLE},
    mf_dt        = #{mfDt,jdbcType=INTEGER},
    reg_dt       = #{regDt,jdbcType=TIMESTAMP},
    reg_id       = #{regId,jdbcType=VARCHAR},
    mod_dt       = #{modDt,jdbcType=TIMESTAMP},
    mod_id       = #{modId,jdbcType=VARCHAR}
  WHERE car_code = #{carCode,jdbcType=INTEGER}
</update>
  <!-- doDelete -->
<delete id="doDelete" parameterType="com.pcwk.ehr.car.CarDTO">
    DELETE FROM CAR
    WHERE CAR_MF = #{carMf}
</delete>
  
<delete id="doDeleteById" parameterType="int">
  DELETE FROM car
  WHERE car_code = #{carCode}
</delete>


  <!-- doSelectOne -->
<select id="doSelectOne" parameterType="com.pcwk.ehr.car.CarDTO" resultType="com.pcwk.ehr.car.CarDTO">
    SELECT * FROM CAR WHERE car_code = #{carCode}
</select>

  <!-- doRetrieve: 예시 (페이지, 검색 추가 필요시 param의 필드 사용) -->
  <select id="doRetrieve" parameterType="com.pcwk.ehr.cmn.DTO" resultType="com.pcwk.ehr.car.CarDTO">
    SELECT
      CAR_CODE AS carCode, PRODUCT_NAME AS productName, CAR_MF AS carMf, CARTYPE AS cartype,
      ORG_FN AS orgFn, MOD_FN AS modFn, PATH AS path, PRICE AS price, FUEL AS fuel, EF AS ef,
      ENGINE AS engine, DPM AS dpm, BATTERY AS battery, MF_DT AS mfDt, REG_DT AS regDt,
      REG_ID AS regId, MOD_DT AS modDt, MOD_ID AS modId
    FROM CAR
    <where>
      <if test="searchDiv != null and searchDiv != '' and searchWord != null and searchWord != ''">
        <choose>
          <when test="searchDiv == 'productName'">
            PRODUCT_NAME LIKE '%' || #{searchWord} || '%'
          </when>
          <when test="searchDiv == 'carMf'">
            CAR_MF LIKE '%' || #{searchWord} || '%'
          </when>
          <!-- 필요한 검색필드 추가 -->
        </choose>
      </if>
    </where>
    ORDER BY CAR_CODE DESC
    <!-- 페이지네이션 예시: <if test="pageSize != null">OFFSET #{pageSize} ROWS FETCH NEXT #{pageSize} ROWS ONLY</if> -->
  </select>


  <select id="getCount" resultType="int">
    SELECT COUNT(*) FROM CAR
  </select>
  
  <!-- 기타 (테스트용) -->
  <delete id="deleteAll">
    DELETE FROM CAR
  </delete>
  

    <!-- ...다른 SQL... -->
<select id="getAllCars" resultType="com.pcwk.ehr.car.CarDTO">
    SELECT
        CAR_CODE,           -- DB 컬럼명!
        PRODUCT_NAME,
        CAR_MF,
        CARTYPE,
        PRICE,
        FUEL,
        EF,
        ENGINE,
        BATTERY,
        MF_DT
    FROM CAR
    ORDER BY CAR_CODE DESC
</select>
  
  
  
   <!-- 브랜드별 조회 -->
<select id="getCarsByBrand" parameterType="String" resultType="com.pcwk.ehr.car.CarDTO">
    SELECT *
    FROM CAR
    WHERE CAR_MF = #{carMf}
</select>

    <!-- 상세조회 -->
<select id="getOne" parameterType="int" resultType="com.pcwk.ehr.car.CarDTO">
    SELECT * FROM CAR WHERE CAR_CODE = #{carCode}
</select>



<!-- 전체 차량 수 조회 -->
<select id="getCarCount" resultType="int">
    SELECT COUNT(*) FROM Car
</select>

<!-- 페이징된 차량 리스트 조회 -->
<!-- CarMapper.xml -->
<select id="getCarsByPage" parameterType="map" resultType="com.pcwk.ehr.car.CarDTO">
    SELECT * FROM (
        SELECT a.*, ROWNUM rn
        FROM (
            SELECT * FROM Car
            ORDER BY car_Code DESC
        ) a
        WHERE ROWNUM &lt;= #{offset} + #{pageSize}
    )
    WHERE rn &gt; #{offset}
</select>

<select id="getCarsByPageWithSearch" parameterType="map" resultType="com.pcwk.ehr.car.CarDTO">
  SELECT * FROM car
  WHERE
    <choose>
      <when test="searchType = 'productName'">
        product_name LIKE CONCAT('%', #{searchWord}, '%')
      </when>
      <when test="searchType = 'carMf'">
        car_mf LIKE CONCAT('%', #{searchWord}, '%')
      </when>
      <otherwise>
        1=1
      </otherwise>
    </choose>
  ORDER BY car_code
  LIMIT #{pageSize} OFFSET #{offset}
</select>

<select id="getCarCountWithSearch" parameterType="map" resultType="int">
  SELECT COUNT(*)
  FROM car
  WHERE
    <choose>
      <when test="searchType = 'productName'">
        product_name LIKE CONCAT('%', #{searchWord}, '%')
      </when>
      <when test="searchType = 'carMf'">
        car_mf LIKE CONCAT('%', #{searchWord}, '%')
      </when>
      <otherwise>
        1=1
      </otherwise>
    </choose>
</select>

</mapper>
